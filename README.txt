什么是 MVP
MVP 设计模式更加关注于前端视图
针对于前端的视图与数据关系的逻辑进行分层设计
做到视图呈现的逻辑与数据管理的视图之间分离

M 层做了什么
Model 是数据创建与数据操作的方法集合

V 层做了什么
View 只关注于视图的管理

P 层做了什么
Presenter 是呈现管理，调用 M 层方法更新数据、调用 M 层方法更新视图

最初的 Presentation Model 没有 M 与 C 层的概念
就是对更新数据的方法与更新视图的方法的单独抽离出来进行封装
而这种呈现管理就是在两者中间层做一个 Driver
后来觉得这种方式太复杂了，其实就是在对逻辑方法与视图模板的绑定 binder 也就是 MVB
再后来感觉一个 binder 的形式太过于单薄，它是解决视图与数据模型之间的关联问题
所以就干脆叫做 MVVM 这种描述，MVVM 是作为 .NET 视图系统的时候就已经存在的规范
Vue 只是单纯借鉴了这种思想，但是并没有完全按照 MVVM 的规范去设计框架
